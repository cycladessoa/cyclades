////////////////////////////////////////////////////////////////////////////////
Copyright (c) 2012, THE BOARD OF TRUSTEES OF THE LELAND STANFORD JUNIOR UNIVERSITY
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

   Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
   Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
   Neither the name of the STANFORD UNIVERSITY nor the names of its contributors
   may be used to endorse or promote products derived from this software without
   specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
OF THE POSSIBILITY OF SUCH DAMAGE.
////////////////////////////////////////////////////////////////////////////////

= Service Capablity Contract: sayhellologging
:toc:

== Document Version
1.0

== Intent
The intent of this document is to provide a contract for consumer reference on use of this capability

== Name
sayhellologging

== Description
This capability is meant to be used as a template. It simply writes some statements to a log file as an example to developers of how to log/track data and how to use some built in APIs.

== State Management
This service capability is stateless

== Owner
TBD

== Interface

=== Interface Classification
* STROMA
* synchronous

=== Expected Input

.Special URI rules

* N/A

.Parameters

* *log-level* [optional] This is a framwork reserved parameter, and should be used for every service. This particular service outputs some examples based on different levels specified. See the Cyclades Specification for more details on this reserved parameter.

.Meta Data

* N/A

==== XML request variations
[NOTE]
This is just a simple exmple for reference. Please see STROMA specification for details.
----
http://localhost:8080/cycladesengine/helloworld?action=sayhellologging&data-type=xml&log-level=warn
----

==== JSON request variations
[NOTE]
This is just a simple exmple for reference. Please see STROMA specification for details.
----
http://localhost:8080/cycladesengine/helloworld?action=sayhellologging&data-type=json&log-level=warn
----

=== Expected Output

==== XML
----
<response service="helloworld" action="sayhellologging" error-code="0" ></response>
----

==== JSON
----
{"service":"helloworld","action":"sayhellologging","error-code":"0","data":{}}
----

== Additional Orchestration Capability Details

N/A

== Functional Requirements

* The capability  will simply help facilitate an undersanding of how the framework logging/tracking APIs could be used.

== Non Functional Requirements

* SLA/QoS
 - N/A

* Security
 - N/A
